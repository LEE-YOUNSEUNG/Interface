/* //압력센서 
const int pressSensor=A0;

void setup(){
  Serial.begin(9600);
}
void loop(){
  int value=analogRead(pressSensor);
  if(value>0){
    Serial.println(value);
  }
} */

/* //진동센서
const int TILT=A0;

void setup(){
  Serial.begin(9600);
}
void loop(){
  int value=analogRead(TILT);
  Serial.println(value);
  delay(100);
}
 */

/* //초음파 센서
int TRIG=3;
int ECHO=2;

void setup(){
  pinMode(TRIG,OUTPUT);
  pinMode(ECHO,INPUT);
  Serial.begin(9600);
}

void loop(){
  digitalWrite(2,LOW);
  digitalWrite(3,LOW);
  delayMicroseconds(2);
  digitalWrite(3,HIGH);
  delayMicroseconds(10);
  digitalWrite(3,LOW);

  unsigned long duration1=pulseIn(ECHO,HIGH);
  float distance1=(float)(340.0*duration1/10000.0)/2.0;

  delay(100);

  digitalWrite(2,LOW);
  digitalWrite(3,LOW);
  delayMicroseconds(2);
  digitalWrite(3,HIGH);
  delayMicroseconds(10);
  digitalWrite(3,LOW);

  unsigned long duration2=pulseIn(ECHO,HIGH);
  float distance2=(float)(340.0*duration2/10000.0)/2.0;

  float velocity=((float)(distance2-distance1)*10);
  
  
  Serial.print(velocity);
  Serial.println("cm/s");
  Serial.print(distance2);
  Serial.println("cm");
  
} */

/* //소리센서
int SOUND=A0;

void setup(){
  Serial.begin(9600);
}
void loop(){
  int value=0;
  value=analogRead(SOUND);
  Serial.print("소리: ");
  Serial.println(value);
  delay(1000);
}
 */

/* //무게센서
#include "HX711.h"
#define DOUT 2;
#define SCK 3;

HX711 scale;

void setup(){
  Serial.begin(9600);
  scale.begin(2,3);
  scale.set_scale();
  scale.tare();
}
void loop(){
  float weight=scale.get_units();
  Serial.print("무게: ");
  Serial.print(weight/1000.);
  Serial.println("kg");
  delay(1000);
} */
/* #include <Servo.h>
int x=A0;
int y=A1;
int Servopin=4;
Servo myServo;
int angle=0;

void setup(){
  myServo.attach(Servopin);
  myServo.write(0);
}
void loop(){
  int x_val=analogRead(x);
  int y_val=analogRead(y);
  
  if(x_val>1000){
    angle=0;
    angle++;
    myServo.write(angle);
    delay(100);
  }
  else if(y_val>1000){
    angle=180;
    angle--;
    myServo.write(angle);
    delay(100);
  }
  else{
    myServo.writeMicroseconds(1500);  // 중간값으로 설정하여 서보모터 정지

  }

} */
